name: Generate Chart Index

on:
#  push:
#    tags:
#      - '*-[v]?[0-9]+.[0-9]+.[0-9]+'
#      - '*-[v]?[0-9]+.[0-9]+.[0-9]+-pre.[0-9]+'
  # Allow to run the workflow from GitHub UI and other workflows.
  workflow_dispatch:
    branches:
      - main
      - "release/*"
    inputs:
      includePrereleases:
        type: boolean
        required: true
        description: "Include prereleases?"
        default: false

  workflow_call:
    inputs:
      includePrereleases:
        type: boolean
        required: true
        description: "Include prereleases?"
        default: false



jobs:
  query:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Query Releases
        uses: ./.github/actions/query-releases
        id: query
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repo: ${{ github.event.repository.name }}
          owner: ${{ github.event.repository.owner.login }}

      - uses: actions/download-artifact@v3
        with:
          name: releases

      - name: Set correct URLs and date
        run: |
          mkdir .releases

          for chart_url in $(cat releases.json| jq -r '.[].releaseAssets.nodes[].downloadUrl'); do
            wget -P .releases/ "$chart_url";
          done

          helm repo index .releases/

          if [[ '${{ inputs.includePrereleases }}' == 'false' }} ]]; then
            releases="$(jq '.[] | select(.isPrerelease == false)' releases.json)"
          else
            releases="$(jq '.[]' releases.json)"
          fi

          for release in $(echo "$releases" | jq -c '. | { name: .name, date: .createdAt, url: .releaseAssets.nodes[].downloadUrl }' releases.json); do
            name=$(echo "$release" | jq -r '.name' | sed -r 's/(.*)-([0-9]+\.[0-9]+\.[0-9]+*)/\1/g')
            version=$(echo "$release" | jq -r '.name' | sed -r 's/(.*)-([0-9]+\.[0-9]+\.[0-9]+*)/\2/g')
            date=$(echo "$release" | jq -r '.date')
            url=$(echo "$release" | jq -r '.url')

            name=$name version=$version date=$date url=$url yq -i e \
            '.entries.[strenv(name)] |= map(select(.version == strenv(version)).created=strenv(date)) |= map(select(.version == strenv(version)).urls=[strenv(url)])' \
            .releases/index.yaml
          done

      - uses: actions/upload-artifact@v3
        with:
          name: chart-index
          path: .releases/index.yaml
