# Somewhat informed by https://github.com/camunda-community-hub/camunda-helm/blob/bc501f7/.github/workflows/release.yaml

name: Release Charts

on:
  push:
    branches:
      - main
  # Allow to run the workflow from GitHub UI and other workflows.
  workflow_dispatch:
    branches:
      - main
      - "release/*"

jobs:
  find-charts-to-release:
    runs-on: ubuntu-latest
    outputs:
      modified-charts-files: ${{ steps.list-changed-charts.outputs.all_modified_files }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get list of changed charts
        id: list-changed-charts
        uses: tj-actions/changed-files@v35.9.2
        with:
          files: charts/*/Chart.yaml
  release:
    runs-on: ubuntu-latest
    container: quay.io/git-chglog/git-chglog:0.15.0
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor}}@users.noreply.github.com"
          git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Install main dependencies
        run: |
          apk --upgrade add bash git grep yq curl

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.12.0

      - name: Generate charts changelog files
        shell: bash
        run: |
          set -x
          # TODO: Bundle all of that logic in a Github Action to make it easy to share.
          for chart_file in ${{ needs.find-charts-to-release.outputs.modified-charts-files }}; do
              chart_name=$(grep -Po "(?<=^name: ).+" ${chart_file})
              chart_version=$(grep -Po "(?<=^version: ).+" ${chart_file})
              chart_tag="${chart_name}-${chart_version}"
              chart_path="charts/${chart_name}"

              # Generate RELEASE-NOTES.md file (used for Github release notes).
              git-chglog                                    \
                  --output "${chart_path}/RELEASE-NOTES.md" \
                  --tag-filter-pattern "${chart_name}"      \
                  --next-tag "${chart_tag}"                 \
                  --path "${chart_path}" "${chart_tag}"

              (set -x; cat ${chart_path}/RELEASE-NOTES.md)
          done

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_RELEASE_NOTES_FILE: RELEASE-NOTES.md
          CR_SKIP_EXISTING: "true"
